/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package arvorebinariabuscagrafico.gui;

import arvorebinariabuscagrafico.arvorebinaria.No;
import arvorebinariabuscagrafico.arvorebinaria.TipoPercurso;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author David
 */
public class JanelaPrincipal extends javax.swing.JFrame {
    
    private PainelArvore painel;
    private DefaultListModel modelo;
    private Percurso percurso;
    private int ordemVisita = 1;
    
    /**
     * Creates new form JanelaPrincipal
     */
    public JanelaPrincipal() {
        
        initComponents();
        
        painel = ( PainelArvore ) painelArvore;
        painel.setMostrarAltura( true );
        modelo = new DefaultListModel();
        percurso = null;
        listaValores.setModel( modelo );
        
        setExtendedState( MAXIMIZED_BOTH );
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings( "unchecked" )
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup = new javax.swing.ButtonGroup();
        painelArvore = new PainelArvore();
        painelOpcoes = new javax.swing.JPanel();
        labelValor = new javax.swing.JLabel();
        fieldValor = new javax.swing.JTextField();
        btnInserir = new javax.swing.JButton();
        painelValores = new javax.swing.JPanel();
        scrollValores = new javax.swing.JScrollPane();
        listaValores = new javax.swing.JList();
        btnLimpar = new javax.swing.JButton();
        btnRemover = new javax.swing.JButton();
        painelPercursos = new javax.swing.JPanel();
        radioPreOrdem = new javax.swing.JRadioButton();
        radioEmOrdem = new javax.swing.JRadioButton();
        radioPosOrdem = new javax.swing.JRadioButton();
        checkInverso = new javax.swing.JCheckBox();
        btnExecutarPercurso = new javax.swing.JButton();
        btnAvancar = new javax.swing.JButton();
        scrollPercurso = new javax.swing.JScrollPane();
        areaPercurso = new javax.swing.JTextArea();
        checkMostrarNiveis = new javax.swing.JCheckBox();
        checkMostrarGraus = new javax.swing.JCheckBox();
        checkMostrarAltura = new javax.swing.JCheckBox();
        checkMostrarOrdem = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Árvore Binária de Busca - David Buzatto");

        javax.swing.GroupLayout painelArvoreLayout = new javax.swing.GroupLayout(painelArvore);
        painelArvore.setLayout(painelArvoreLayout);
        painelArvoreLayout.setHorizontalGroup(
            painelArvoreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 470, Short.MAX_VALUE)
        );
        painelArvoreLayout.setVerticalGroup(
            painelArvoreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 627, Short.MAX_VALUE)
        );

        painelOpcoes.setBorder(javax.swing.BorderFactory.createTitledBorder("Opções"));

        labelValor.setText("Valor:");

        fieldValor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldValorActionPerformed(evt);
            }
        });

        btnInserir.setText("Inserir");
        btnInserir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInserirActionPerformed(evt);
            }
        });

        painelValores.setBorder(javax.swing.BorderFactory.createTitledBorder("Valores"));

        scrollValores.setViewportView(listaValores);

        btnLimpar.setText("Limpar");
        btnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparActionPerformed(evt);
            }
        });

        btnRemover.setText("Remover");
        btnRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout painelValoresLayout = new javax.swing.GroupLayout(painelValores);
        painelValores.setLayout(painelValoresLayout);
        painelValoresLayout.setHorizontalGroup(
            painelValoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelValoresLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelValoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrollValores, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelValoresLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnRemover)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnLimpar)))
                .addContainerGap())
        );
        painelValoresLayout.setVerticalGroup(
            painelValoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelValoresLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scrollValores, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelValoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRemover)
                    .addComponent(btnLimpar))
                .addContainerGap())
        );

        painelPercursos.setBorder(javax.swing.BorderFactory.createTitledBorder("Percursos"));

        buttonGroup.add(radioPreOrdem);
        radioPreOrdem.setSelected(true);
        radioPreOrdem.setText("Pré-Ordem");
        radioPreOrdem.setToolTipText("raiz -> esquerda -> direita");

        buttonGroup.add(radioEmOrdem);
        radioEmOrdem.setText("Em Ordem");
        radioEmOrdem.setToolTipText("esquerda -> raiz -> direita");

        buttonGroup.add(radioPosOrdem);
        radioPosOrdem.setText("Pós-Ordem");
        radioPosOrdem.setToolTipText("esquerda -> direita -> raiz");

        checkInverso.setText("Inverter");

        btnExecutarPercurso.setText("Executar");
        btnExecutarPercurso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExecutarPercursoActionPerformed(evt);
            }
        });

        btnAvancar.setText("Avançar");
        btnAvancar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAvancarActionPerformed(evt);
            }
        });

        scrollPercurso.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        areaPercurso.setColumns(10);
        areaPercurso.setEditable(false);
        areaPercurso.setLineWrap(true);
        areaPercurso.setRows(5);
        scrollPercurso.setViewportView(areaPercurso);

        javax.swing.GroupLayout painelPercursosLayout = new javax.swing.GroupLayout(painelPercursos);
        painelPercursos.setLayout(painelPercursosLayout);
        painelPercursosLayout.setHorizontalGroup(
            painelPercursosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelPercursosLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(painelPercursosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrollPercurso)
                    .addGroup(painelPercursosLayout.createSequentialGroup()
                        .addGroup(painelPercursosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(painelPercursosLayout.createSequentialGroup()
                                .addGroup(painelPercursosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(radioPreOrdem)
                                    .addComponent(radioEmOrdem)
                                    .addComponent(radioPosOrdem))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(checkInverso))
                            .addGroup(painelPercursosLayout.createSequentialGroup()
                                .addComponent(btnExecutarPercurso)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnAvancar)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        painelPercursosLayout.setVerticalGroup(
            painelPercursosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelPercursosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(radioPreOrdem)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(radioEmOrdem)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelPercursosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radioPosOrdem)
                    .addComponent(checkInverso))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelPercursosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnExecutarPercurso)
                    .addComponent(btnAvancar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollPercurso, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE)
                .addContainerGap())
        );

        checkMostrarNiveis.setText("Mostrar Níveis");
        checkMostrarNiveis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkMostrarNiveisActionPerformed(evt);
            }
        });

        checkMostrarGraus.setText("Mostrar Graus");
        checkMostrarGraus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkMostrarGrausActionPerformed(evt);
            }
        });

        checkMostrarAltura.setSelected(true);
        checkMostrarAltura.setText("Mostrar Altura");
        checkMostrarAltura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkMostrarAlturaActionPerformed(evt);
            }
        });

        checkMostrarOrdem.setText("Mostrar Ordem");
        checkMostrarOrdem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkMostrarOrdemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout painelOpcoesLayout = new javax.swing.GroupLayout(painelOpcoes);
        painelOpcoes.setLayout(painelOpcoesLayout);
        painelOpcoesLayout.setHorizontalGroup(
            painelOpcoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelOpcoesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelOpcoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(painelValores, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(painelPercursos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(painelOpcoesLayout.createSequentialGroup()
                        .addGroup(painelOpcoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(checkMostrarAltura)
                            .addGroup(painelOpcoesLayout.createSequentialGroup()
                                .addComponent(labelValor)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(fieldValor, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnInserir))
                            .addComponent(checkMostrarOrdem)
                            .addGroup(painelOpcoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(checkMostrarGraus)
                                .addComponent(checkMostrarNiveis)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        painelOpcoesLayout.setVerticalGroup(
            painelOpcoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelOpcoesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelOpcoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelValor)
                    .addComponent(fieldValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnInserir))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(painelValores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(painelPercursos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkMostrarAltura)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkMostrarNiveis)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkMostrarGraus)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkMostrarOrdem)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(painelArvore, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(painelOpcoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painelOpcoes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(painelArvore, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnInserirActionPerformed( java.awt.event.ActionEvent evt ) {//GEN-FIRST:event_btnInserirActionPerformed
        inserir();
    }//GEN-LAST:event_btnInserirActionPerformed

    private void fieldValorActionPerformed( java.awt.event.ActionEvent evt ) {//GEN-FIRST:event_fieldValorActionPerformed
        inserir();
    }//GEN-LAST:event_fieldValorActionPerformed

    private void btnRemoverActionPerformed( java.awt.event.ActionEvent evt ) {//GEN-FIRST:event_btnRemoverActionPerformed
        
        List valores = listaValores.getSelectedValuesList();
        
        if ( valores.isEmpty() ) {
            
            JOptionPane.showMessageDialog( this, 
                    "Selecione pelo menos um item para ser removido!", 
                    "ERRO", JOptionPane.ERROR_MESSAGE );
            
        } else {
            
            if ( JOptionPane.showConfirmDialog( this, 
                    "Deseja mesmo remover o(s) item(ns) selecionado(s)?", 
                    "Remover?",
                    JOptionPane.YES_NO_OPTION ) == JOptionPane.YES_OPTION ) {
                
                for ( Object i : valores ) {
                    int valor = ( Integer ) i;
                    painel.remover( valor );
                    modelo.removeElement( valor );
                }

                listaValores.setSelectedIndex( -1 );
                ordemVisita = 1;
                painel.resetar();
                painel.repaint();
            
            }
            
        }
        
    }//GEN-LAST:event_btnRemoverActionPerformed

    private void btnLimparActionPerformed( java.awt.event.ActionEvent evt ) {//GEN-FIRST:event_btnLimparActionPerformed
        
        if ( JOptionPane.showConfirmDialog( this, 
                "Deseja mesmo limpar a árvore?", 
                "Limpar?",
                JOptionPane.YES_NO_OPTION ) == JOptionPane.YES_OPTION ) {
            painel.limpar();
            modelo.clear();
            areaPercurso.setText( "" );
            percurso = null;
            ordemVisita = 1;
            painel.resetar();
            painel.repaint();
        }
    }//GEN-LAST:event_btnLimparActionPerformed

    private void btnExecutarPercursoActionPerformed( java.awt.event.ActionEvent evt ) {//GEN-FIRST:event_btnExecutarPercursoActionPerformed
        
        ordemVisita = 1;
        painel.resetar();
        painel.repaint();
        
        if ( checkInverso.isSelected() ) {
            if ( radioPreOrdem.isSelected() ) {
                percurso = painel.gerarPercurso( TipoPercurso.PRE_ORDEM_INV );
            } else if ( radioEmOrdem.isSelected() ) {
                percurso = painel.gerarPercurso( TipoPercurso.EM_ORDEM_INV );
            } else {
                percurso = painel.gerarPercurso( TipoPercurso.POS_ORDEM_INV );
            }
        } else {
            if ( radioPreOrdem.isSelected() ) {
                percurso = painel.gerarPercurso( TipoPercurso.PRE_ORDEM );
            } else if ( radioEmOrdem.isSelected() ) {
                percurso = painel.gerarPercurso( TipoPercurso.EM_ORDEM );
            } else {
                percurso = painel.gerarPercurso( TipoPercurso.POS_ORDEM );
            }
        }
        
        areaPercurso.setText( percurso.textoPercurso );
        
    }//GEN-LAST:event_btnExecutarPercursoActionPerformed

    private void checkMostrarNiveisActionPerformed( java.awt.event.ActionEvent evt ) {//GEN-FIRST:event_checkMostrarNiveisActionPerformed
        painel.setMostrarNiveis( checkMostrarNiveis.isSelected() );
        painel.repaint();
    }//GEN-LAST:event_checkMostrarNiveisActionPerformed

    private void btnAvancarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAvancarActionPerformed
        
        if ( percurso != null ) {
            
            if ( !percurso.itensPercurso.isEmpty() ) {
                No no = percurso.itensPercurso.remove( 0 );
                no.ordemVisita = ordemVisita++;
                painel.visitar( no );
                painel.repaint();
            }
            
            
        }
        
    }//GEN-LAST:event_btnAvancarActionPerformed

    private void checkMostrarOrdemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkMostrarOrdemActionPerformed
        painel.setMostrarOrdem( checkMostrarOrdem.isSelected() );
        painel.repaint();
    }//GEN-LAST:event_checkMostrarOrdemActionPerformed

    private void checkMostrarGrausActionPerformed( java.awt.event.ActionEvent evt ) {//GEN-FIRST:event_checkMostrarGrausActionPerformed
        painel.setMostrarGraus( checkMostrarGraus.isSelected() );
        painel.repaint();
    }//GEN-LAST:event_checkMostrarGrausActionPerformed

    private void checkMostrarAlturaActionPerformed( java.awt.event.ActionEvent evt ) {//GEN-FIRST:event_checkMostrarAlturaActionPerformed
        painel.setMostrarAltura( checkMostrarAltura.isSelected() );
        painel.repaint();
    }//GEN-LAST:event_checkMostrarAlturaActionPerformed

    private void inserir() {
        
        try {
            
            int valor = Integer.parseInt( fieldValor.getText() );
            fieldValor.setText( "" );
            fieldValor.requestFocus();
            
            modelo.addElement( valor );
            percurso = null;
            ordemVisita = 1;
            painel.resetar();
            
            painel.inserir( valor );
            painel.repaint();
            
        } catch ( NumberFormatException exc ) {
            JOptionPane.showMessageDialog( this, 
                    "Insira um inteiro!", "ERRO", JOptionPane.ERROR_MESSAGE );
            fieldValor.requestFocus();
        }
        
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea areaPercurso;
    private javax.swing.JButton btnAvancar;
    private javax.swing.JButton btnExecutarPercurso;
    private javax.swing.JButton btnInserir;
    private javax.swing.JButton btnLimpar;
    private javax.swing.JButton btnRemover;
    private javax.swing.ButtonGroup buttonGroup;
    private javax.swing.JCheckBox checkInverso;
    private javax.swing.JCheckBox checkMostrarAltura;
    private javax.swing.JCheckBox checkMostrarGraus;
    private javax.swing.JCheckBox checkMostrarNiveis;
    private javax.swing.JCheckBox checkMostrarOrdem;
    private javax.swing.JTextField fieldValor;
    private javax.swing.JLabel labelValor;
    private javax.swing.JList listaValores;
    private javax.swing.JPanel painelArvore;
    private javax.swing.JPanel painelOpcoes;
    private javax.swing.JPanel painelPercursos;
    private javax.swing.JPanel painelValores;
    private javax.swing.JRadioButton radioEmOrdem;
    private javax.swing.JRadioButton radioPosOrdem;
    private javax.swing.JRadioButton radioPreOrdem;
    private javax.swing.JScrollPane scrollPercurso;
    private javax.swing.JScrollPane scrollValores;
    // End of variables declaration//GEN-END:variables
}
