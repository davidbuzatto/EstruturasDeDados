/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

package algoritmosbuscaordenacaografico.gui;

import algoritmosbuscaordenacaografico.sorters.*;
import java.awt.Dimension;
import java.awt.Rectangle;
import javax.swing.JOptionPane;

/**
 *
 * @author David Buzatto
 */
public class JanelaPrincipal extends javax.swing.JFrame {

    private Integer[] array;
    private SorterPanel painelDesenho;
    
    public JanelaPrincipal() {
        initComponents();
        painelDesenho = ( SorterPanel ) painelGrafico;
        setExtendedState( MAXIMIZED_BOTH );
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupo = new javax.swing.ButtonGroup();
        panelOpcoes = new javax.swing.JPanel();
        painelAlgoritmos = new javax.swing.JPanel();
        rbBubble = new javax.swing.JRadioButton();
        rbSelection = new javax.swing.JRadioButton();
        rbInsertion = new javax.swing.JRadioButton();
        rbShell = new javax.swing.JRadioButton();
        rbHeap = new javax.swing.JRadioButton();
        rbMerge = new javax.swing.JRadioButton();
        rbQuick = new javax.swing.JRadioButton();
        labelVersaoBubble = new javax.swing.JLabel();
        comboVersaoBubble = new javax.swing.JComboBox();
        labelQuantidade = new javax.swing.JLabel();
        fieldQuantidade = new javax.swing.JTextField();
        checkMostrarNumeros = new javax.swing.JCheckBox();
        btnOrdenar = new javax.swing.JButton();
        checkGerarNov = new javax.swing.JCheckBox();
        scrollArray = new javax.swing.JScrollPane();
        areaArray = new javax.swing.JTextArea();
        labelIntervalo = new javax.swing.JLabel();
        sliderIntervalo = new javax.swing.JSlider();
        labelLargLinha = new javax.swing.JLabel();
        labelEspH = new javax.swing.JLabel();
        labelEspV = new javax.swing.JLabel();
        sliderLargLinha = new javax.swing.JSlider();
        sliderEspH = new javax.swing.JSlider();
        sliderEspV = new javax.swing.JSlider();
        scrollGrafico = new javax.swing.JScrollPane();
        painelGrafico = new SorterPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Algoritmos de Ordenação (Gráfico de Trocas) - David Buzatto");

        panelOpcoes.setBorder(javax.swing.BorderFactory.createTitledBorder("Opções"));

        painelAlgoritmos.setBorder(javax.swing.BorderFactory.createTitledBorder("Algoritmo"));

        grupo.add(rbBubble);
        rbBubble.setSelected(true);
        rbBubble.setText("Bubble Sort");

        grupo.add(rbSelection);
        rbSelection.setText("Selection Sort");

        grupo.add(rbInsertion);
        rbInsertion.setText("Insertion Sort");

        grupo.add(rbShell);
        rbShell.setText("Shell Sort");

        grupo.add(rbHeap);
        rbHeap.setText("Heap Sort");

        grupo.add(rbMerge);
        rbMerge.setText("Merge Sort");

        grupo.add(rbQuick);
        rbQuick.setText("Quick Sort");

        labelVersaoBubble.setText("Versão:");

        comboVersaoBubble.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4" }));

        javax.swing.GroupLayout painelAlgoritmosLayout = new javax.swing.GroupLayout(painelAlgoritmos);
        painelAlgoritmos.setLayout(painelAlgoritmosLayout);
        painelAlgoritmosLayout.setHorizontalGroup(
            painelAlgoritmosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelAlgoritmosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelAlgoritmosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelAlgoritmosLayout.createSequentialGroup()
                        .addComponent(rbBubble)
                        .addGap(18, 18, 18)
                        .addComponent(labelVersaoBubble)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboVersaoBubble, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(rbSelection)
                    .addComponent(rbInsertion)
                    .addComponent(rbShell)
                    .addComponent(rbHeap)
                    .addComponent(rbMerge)
                    .addComponent(rbQuick))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        painelAlgoritmosLayout.setVerticalGroup(
            painelAlgoritmosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelAlgoritmosLayout.createSequentialGroup()
                .addGroup(painelAlgoritmosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbBubble)
                    .addComponent(labelVersaoBubble)
                    .addComponent(comboVersaoBubble, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbSelection)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbInsertion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbShell)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbHeap)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbMerge)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbQuick))
        );

        labelQuantidade.setText("Quantidade:");

        fieldQuantidade.setText("10");

        checkMostrarNumeros.setText("Mostrar Números");

        btnOrdenar.setText("Ordenar!");
        btnOrdenar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOrdenarActionPerformed(evt);
            }
        });

        checkGerarNov.setText("Gerar Nov.");

        areaArray.setColumns(20);
        areaArray.setLineWrap(true);
        areaArray.setRows(5);
        scrollArray.setViewportView(areaArray);

        labelIntervalo.setText("Intervalo:");

        sliderIntervalo.setMajorTickSpacing(10);
        sliderIntervalo.setMinorTickSpacing(10);
        sliderIntervalo.setPaintLabels(true);
        sliderIntervalo.setPaintTicks(true);
        sliderIntervalo.setValue(20);

        labelLargLinha.setText("Largura da linha:");

        labelEspH.setText("Espaçamento H.:");

        labelEspV.setText("Espaçamento V.:");

        sliderLargLinha.setMajorTickSpacing(5);
        sliderLargLinha.setMaximum(30);
        sliderLargLinha.setMinorTickSpacing(5);
        sliderLargLinha.setPaintLabels(true);
        sliderLargLinha.setPaintTicks(true);
        sliderLargLinha.setValue(10);

        sliderEspH.setMajorTickSpacing(5);
        sliderEspH.setMaximum(30);
        sliderEspH.setMinorTickSpacing(5);
        sliderEspH.setPaintLabels(true);
        sliderEspH.setPaintTicks(true);
        sliderEspH.setValue(20);

        sliderEspV.setMajorTickSpacing(5);
        sliderEspV.setMaximum(30);
        sliderEspV.setMinorTickSpacing(5);
        sliderEspV.setPaintLabels(true);
        sliderEspV.setPaintTicks(true);
        sliderEspV.setValue(20);

        javax.swing.GroupLayout panelOpcoesLayout = new javax.swing.GroupLayout(panelOpcoes);
        panelOpcoes.setLayout(panelOpcoesLayout);
        panelOpcoesLayout.setHorizontalGroup(
            panelOpcoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelOpcoesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelOpcoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelOpcoesLayout.createSequentialGroup()
                        .addComponent(sliderIntervalo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(5, 5, 5))
                    .addGroup(panelOpcoesLayout.createSequentialGroup()
                        .addComponent(labelIntervalo)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelOpcoesLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(panelOpcoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelOpcoesLayout.createSequentialGroup()
                                .addComponent(painelAlgoritmos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(1, 1, 1))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelOpcoesLayout.createSequentialGroup()
                                .addGroup(panelOpcoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(checkMostrarNumeros)
                                    .addComponent(scrollArray, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(panelOpcoesLayout.createSequentialGroup()
                                        .addComponent(labelQuantidade)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(fieldQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(checkGerarNov)))
                                .addContainerGap())))
                    .addGroup(panelOpcoesLayout.createSequentialGroup()
                        .addGroup(panelOpcoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelOpcoesLayout.createSequentialGroup()
                                .addGroup(panelOpcoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(labelEspH)
                                    .addComponent(labelLargLinha)
                                    .addComponent(labelEspV))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(panelOpcoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(sliderLargLinha, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(sliderEspH, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(sliderEspV, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(btnOrdenar))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        panelOpcoesLayout.setVerticalGroup(
            panelOpcoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelOpcoesLayout.createSequentialGroup()
                .addComponent(painelAlgoritmos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelOpcoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelQuantidade)
                    .addComponent(fieldQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(checkGerarNov))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelIntervalo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sliderIntervalo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollArray, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkMostrarNumeros)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelOpcoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(labelLargLinha)
                    .addComponent(sliderLargLinha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(panelOpcoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(labelEspH)
                    .addComponent(sliderEspH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelOpcoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(labelEspV)
                    .addComponent(sliderEspV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnOrdenar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        scrollGrafico.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        javax.swing.GroupLayout painelGraficoLayout = new javax.swing.GroupLayout(painelGrafico);
        painelGrafico.setLayout(painelGraficoLayout);
        painelGraficoLayout.setHorizontalGroup(
            painelGraficoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 433, Short.MAX_VALUE)
        );
        painelGraficoLayout.setVerticalGroup(
            painelGraficoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 793, Short.MAX_VALUE)
        );

        scrollGrafico.setViewportView(painelGrafico);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(scrollGrafico)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelOpcoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelOpcoes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(scrollGrafico, javax.swing.GroupLayout.DEFAULT_SIZE, 788, Short.MAX_VALUE)
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-730)/2, (screenSize.height-826)/2, 730, 826);
    }// </editor-fold>//GEN-END:initComponents

    private void btnOrdenarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOrdenarActionPerformed

        try {

            int quant = Integer.parseInt( fieldQuantidade.getText() );
            Sorter sorter = null;

            if ( rbBubble.isSelected() ) {
                switch ( comboVersaoBubble.getSelectedIndex() ) {
                    case 0:
                        sorter = new BubbleSorterV1();
                        break;
                    case 1:
                        sorter = new BubbleSorterV2();
                        break;
                    case 2:
                        sorter = new BubbleSorterV3();
                        break;
                    case 3:
                        sorter = new BubbleSorterV4();
                        break;
                }
            } else if ( rbSelection.isSelected() ) {
                sorter = new SelectionSorter();
            } else if ( rbInsertion.isSelected() ) {
                sorter = new InsertionSorter();
            } else if ( rbShell.isSelected() ) {
                sorter = new ShellSorter();
            } else if ( rbHeap.isSelected() ) {
                sorter = new HeapSorter();
            } else if ( rbMerge.isSelected() ) {
                sorter = new MergeSorter();
            } else if ( rbQuick.isSelected() ) {
                sorter = new QuickSorter();
            }
            
            if ( array == null || checkGerarNov.isSelected() ) {
                array = gerarArrayAleatorio( quant );
                preencherAreaArray();
            }
            
            sorter.sortIt( array.clone() );
            
            sorter.getDrawEngine().setLarguraLinha( sliderLargLinha.getValue() );
            sorter.getDrawEngine().setEspacamentoHorizontal( sliderEspH.getValue() );
            sorter.getDrawEngine().setEspacamentoVerticalLinha( sliderEspV.getValue() );
            
            painelDesenho.setSorter( sorter );
            painelDesenho.setShowLabels( checkMostrarNumeros.isSelected() );
            
            Dimension d = new Dimension( 
                        sorter.getDrawEngine().getMaxX() + 50,
                        sorter.getDrawEngine().getMaxY() + 50 );
            
            painelGrafico.repaint();

        } catch ( NumberFormatException exc ) {
            JOptionPane.showMessageDialog( null, "Entre com um número!",
                    "ERRO", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btnOrdenarActionPerformed

    private Integer[] gerarArrayAleatorio( int quantidade ) {
        
        Integer[] array = new Integer[ quantidade ];

        for ( int i = 0; i < array.length; i++ ) {
            array[i] = ( int ) ( Math.random() * sliderIntervalo.getValue() );
        }

        return array;
    }
    
    private void preencherAreaArray() {
        
        StringBuilder sb = new StringBuilder();
        boolean s = true;
        
        if ( array != null ) {
            for ( Integer i : array ) {
                if ( s ) {
                    sb.append( i );
                    s = false;
                } else {
                    sb.append( ", " ).append( i );
                }
                
            }
        }
        
        areaArray.setText( sb.toString() );
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea areaArray;
    private javax.swing.JButton btnOrdenar;
    private javax.swing.JCheckBox checkGerarNov;
    private javax.swing.JCheckBox checkMostrarNumeros;
    private javax.swing.JComboBox comboVersaoBubble;
    private javax.swing.JTextField fieldQuantidade;
    private javax.swing.ButtonGroup grupo;
    private javax.swing.JLabel labelEspH;
    private javax.swing.JLabel labelEspV;
    private javax.swing.JLabel labelIntervalo;
    private javax.swing.JLabel labelLargLinha;
    private javax.swing.JLabel labelQuantidade;
    private javax.swing.JLabel labelVersaoBubble;
    private javax.swing.JPanel painelAlgoritmos;
    private javax.swing.JPanel painelGrafico;
    private javax.swing.JPanel panelOpcoes;
    private javax.swing.JRadioButton rbBubble;
    private javax.swing.JRadioButton rbHeap;
    private javax.swing.JRadioButton rbInsertion;
    private javax.swing.JRadioButton rbMerge;
    private javax.swing.JRadioButton rbQuick;
    private javax.swing.JRadioButton rbSelection;
    private javax.swing.JRadioButton rbShell;
    private javax.swing.JScrollPane scrollArray;
    private javax.swing.JScrollPane scrollGrafico;
    private javax.swing.JSlider sliderEspH;
    private javax.swing.JSlider sliderEspV;
    private javax.swing.JSlider sliderIntervalo;
    private javax.swing.JSlider sliderLargLinha;
    // End of variables declaration//GEN-END:variables

}
